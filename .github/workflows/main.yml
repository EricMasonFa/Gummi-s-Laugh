name: CI

on:
  push:
    tags:
      - '*'

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.0.3
        with:
          go-version: 1.13

      - uses: actions/checkout@v2

      - name: Install Linux packages
        run: sudo apt update && sudo apt install -y --no-install-recommends libopenal1 libopenal-dev libasound2-dev libx11-dev libx11-xcb-dev libxkbcommon-dev libxkbcommon-x11-dev libxtst-dev

      - name: Build
        id: build_ubuntu
        env:
          GOOS: linux
          GOARCH: amd64
        run: make bin

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./bin/gummi-${{ steps.build_ubuntu.env.GOOS }}-${{ steps.build_ubuntu.env.GOARCH }}

  windows:
    runs-on: windows-latest
    needs: ubuntu
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.0.3
        with:
          go-version: 1.13

      - uses: actions/checkout@v2

      - name: Build
        id: build-windows
        env:
          GOOS: windows
          GOARCH: amd64
        run: make bin

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./bin/gummi-${{ steps.build_windows.env.GOOS }}-${{ steps.build_windows.env.GOARCH }}

  macos:
    runs-on: macos-latest
    needs: windows
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.0.3
        with:
          go-version: 1.13

      - uses: actions/checkout@v2

      - name: Build
        id: build-macos
        env:
          GOOS: darwin
          GOARCH: amd64
        run: make bin

      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./bin/gummi-${{ steps.build_macos.env.GOOS }}-${{ steps.build_macos.env.GOARCH }}

  create_release:
    runs-on: ubuntu-latest
    needs: macos
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gummi-linux-amd64
          asset_name: gummi-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gummi-windows-amd64
          asset_name: gummi-windows-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gummi-darwin-amd64
          asset_name: gummi-darwin-amd64
          asset_content_type: application/octet-stream
